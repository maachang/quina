<%#
 ■proxy_AutoProxySmple.java ファイル作成用のjs用smple.
   javaReflectionのDynamicProxyはgraalvmのnative-mage
   で利用しようとする場合、nativeコンパイル時に個別の設定が
   必要となります.
   
   quinaでは `@ProxyScoped` を設定することで、DynamicProxy
   に類似した機能が利用可能となります.
   
   ここでは LoadProxyScoped.java.smple と対になる形での
   対象のJavascriptを展開します.
   
   このsmple(.smj)は[js用]なので、js向けの実装・解析を行う必要が
   あります.
   
   また、対象の引数は以下の条件が必要となります.

   global.args = {
     srcClass: Proxy元継承Package名 + クラス名
     ,srcObjectName: Proxy元継承クラス名(単体)
     ,initMethod: proxyメソッド名とパラメータ定義 xxx(xyz)的定義
     ,proxyMethodList: [
       proxyメソッドの定義内容
       ・・・・
     ]
     ・・・・
   }
}
%><%

// タブを生成.
// @param count タブ数を設定.
// @return タブ * countの文字列を返却.
var createTab = function(count) {
  var ret = "";
  for(var i = 0; i < count; i ++) {
    ret += "\t";
  }
  return ret;
}

// 表示内容を改行区切りで整頓して返却.
//
//  > 例:
//    var a = "hoge(\na,\nb,\nc\n);"
//    trimOut(a, 0, "(", ")")
//  > 結果:
//hoge(
//	a,
//	b,
//	c
//);
//
// @param src 対象の文字列を設定.
// @param tabCount 開始タブ数を生成.
// @param bracketsStart タブ数を増やす開始括弧を設定.
// @param bracketsEnd タブ数を減らす終了括弧を設定.
// @return 処理結果が返却される.
var trimOut = function(
  src, tabCount, bracketsStart, bracketsEnd) {
  var i, j, len, lenJ, before, befYen, value;
  tabCount = tabCount|0;
  var bCount = 0;
  var lst = src.split("\n");
  len = lst.length;
  before = tabCount;
  var ret = "";
  for(i = 0; i < len; i ++) {
    value = lst[i].trim();
    lenJ = value.length;
    befYen = false;
    for(j = 0; j < lenJ; j ++) {
      if(!befYen) {
        bCount += value.charAt(j) == bracketsStart ?
          1 : 0;
        bCount -= value.charAt(j) == bracketsEnd ?
          1 : 0
      }
      befYen = value.charAt(j) == '\\';
    }
    bCount = bCount < 0 ? 0 : bCount;
    ret += createTab(
      tabCount + (before < bCount ? before : bCount))
    + value + "\n";
    before = bCount;
  }
  return ret;
}

%>package quinax.proxy;

/**
 * ProxyScoped ProxyClass automatically generated based on the
 * annotation definition class "${args.srcClass}".
 */
@SuppressWarnings({ "unchecked", "rawtypes", "deprecation" })
public final class AutoProxy${args.srcObjectName}
	extends ${args.srcClass} {
	
	/**
	 * Set the required parameters.
	 * @param args Set the parameters.
	 */
	public final void __initialSetting(
		quina.compile.cdi.annotation.proxy.ProxySettingArgs args) {
		try {
${trimOut(args.initMethod, 2, '(', ')');}
		} catch(quina.exception.QuinaException qe) {
			throw qe;
		} catch(Exception e) {
			throw new quina.exception.QuinaException(e);
		}
	}
	<%
		var proxyMethodList = args.proxyMethodList;
		var len = proxyMethodList.length;
		for(var i = 0; i < len; i ++) {
	%>
	@Override
${trimOut(proxyMethodList[i], 1, '{', '}');}
	<%$end%>
}